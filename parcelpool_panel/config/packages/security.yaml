security:
    encoders:
        App\Entity\Administrator:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Administrator
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AdminLoginAuthenticator
            logout:
                path: /logout
                target: /login 
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login/success, roles: ROLE_USER }  # access restriction to login/success page without login
        - { path: ^/source/, roles: ROLE_USER } # access restriction to every route which starts with source/ without login
        - { path: ^/destination/, roles: ROLE_USER } # access restriction to every route which starts with destination/ without login
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 } # the ip should be changed for the deployment to just give access to that ip
        - { path: ^/login, roles: ROLE_NO_ACCESS }